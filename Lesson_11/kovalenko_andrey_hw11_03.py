'''
Создать собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Запрашивать у пользователя данные и заполнять список необходимо только числами.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
'''


# Просто перехватываем сюда все ошибки типизации.
class ValueInvalidError(Exception):
    def __init__(self, message="Ошибка значения"):
        self.message = message
        super().__init__(self.message)


my_list = []

while True:
    try:
        i_num = input("Введите число (Целое, Дробное через '.', для завершения введите 'stop'): ")
        if i_num == 'stop':
            break
        try:
            my_list.append(int(i_num))
        except:
            try:
                my_list.append(float(i_num))
            except:
                raise ValueInvalidError
    except ValueInvalidError:  # Перекрываем ошибки типизации и отображаем наше сообщение.
        print("Можно вводить только числа!\n")

print(','.join([str(x) for x in my_list]))
