'''
Создать список, состоящий из кубов нечётных чисел от 1 до 1000:
 Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
Например, число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7.
Внимание: использовать только арифметические операции!
 К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка,
сумма цифр которых делится нацело на 7.
 * Решить задачу под пунктом b, не создавая новый список.
'''

# Счетчик для заполнения массива кубами чисел.
increment = 0

# Массив кубов
numbers_list = []

# Сумма
total_summ = 0

# Для решения второй задачи (2 в одной) сделаем два цикла.
cycles_counter = 0

# Нарисуем кубы и сразу заполним массив строковыми значениями.
while increment <= 1000:
    increment += 1
    # Заполняем только нечетным числами.
    if increment % 2 != 0:
        numbers_list.append(str(increment ** 3))

while cycles_counter < 2:
    # Общая сумма полученная в результате анализа массива в текущем проходе.
    total_summ = 0
    for i, el in enumerate(numbers_list):
        # Счетчик который хранит в себе значение суммы всех цифр числа.
        check_value = 0
        # Если это второй проход, то надо к каждому полученному элементу прибавить 17 (тут мы не создаем новый список)
        if cycles_counter != 0:
            el = str(int(el) + 17)
        # print(f'Разбираем очередное число: {el}')
        for x, data in enumerate(el):
            check_value = check_value + int(data)
            # print(f'Символ из числа: {data}, накопленная сумма чисел: {check_value}')
        if check_value % 7 == 0:
            # if cycles_counter == 0:
            #     print(f'Число ({el}) нужно учесть, так как сумма его чисел ({check_value}) кратна 7')
            # else:
            #     print(f'Число ({int(el)-17}+17) нужно учесть, так как сумма его чисел ({check_value}) кратна 7')
            total_summ = total_summ + int(el)
            # print(total_summ)
    cycles_counter += 1
    print(f'Сумма соответствующих чисел после прохода #{cycles_counter} составит: {total_summ}')
